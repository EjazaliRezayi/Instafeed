{"ast":null,"code":"var _jsxFileName = \"/Users/christianetayar/Desktop/Instafeed/src/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Post.css';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { datab } from './firebase';\nimport firebase from 'firebase';\nimport Like from './Like';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post({\n  postId,\n  username,\n  user,\n  caption,\n  imageUrl\n}) {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n\n  const onFollow = event => {\n    event.preventDefault(); // username -> is the username of the user that posted the pic\n\n    datab.collection(\"following\").doc(user.displayName).collection(\"userFollowing\").add({\n      Isfollowing: username,\n      Username: user.displayName\n    });\n  };\n\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) {\n      unsubscribe = datab.collection(\"posts\").doc(postId).collection(\"comments\").orderBy(\"timestamp\", \"asc\").onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n\n  const postComment = event => {\n    event.preventDefault();\n    datab.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setComment('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post_header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: \"Post_Avatar\",\n        alt: \"ChristianeTayar\",\n        src: \"/static/images/avatar/1.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", username, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Post_follow\",\n        type: \"button\",\n        onClick: onFollow,\n        children: \"Follow user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"Post_pic\",\n      src: imageUrl,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"Post_text\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", username, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 41\n      }, this), \" \", caption, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Like, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post_comments\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: comment.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 20\n        }, this), \" \", comment.text, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Post_commentbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Post_input\",\n        type: \"text\",\n        placeholder: \"Add COMMENTS!\",\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !comment,\n        className: \"Post_button\",\n        type: \"submit\",\n        onClick: postComment,\n        children: \"Submit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"vDMNQUtDpjPqquTzbqtVZcuIh7s=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/christianetayar/Desktop/Instafeed/src/Post.js"],"names":["React","useState","useEffect","Avatar","datab","firebase","Like","Post","postId","username","user","caption","imageUrl","comments","setComments","comment","setComment","onFollow","event","preventDefault","collection","doc","displayName","add","Isfollowing","Username","unsubscribe","orderBy","onSnapshot","snapshot","docs","map","data","postComment","text","timestamp","firestore","FieldValue","serverTimestamp","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Post.css';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { datab } from './firebase';\nimport firebase from 'firebase';\nimport Like from './Like';\n\nfunction Post({ postId, username, user, caption, imageUrl }) {\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState('');\n   \n\n\n    const onFollow =(event) =>{\n        event.preventDefault();\n        // username -> is the username of the user that posted the pic\n        datab.collection(\"following\").doc(user.displayName).collection(\"userFollowing\").add({\n             Isfollowing: username , Username: user.displayName \n        });\n        \n\n    }\n\n\n    useEffect(() => {\n        let unsubscribe;\n        if(postId){\n            unsubscribe = datab\n            .collection(\"posts\")\n            .doc(postId)\n            .collection(\"comments\")\n            .orderBy(\"timestamp\",\"asc\")\n            .onSnapshot((snapshot) => {\n                setComments(snapshot.docs.map((doc) => doc.data()));\n            });\n        }\n        return () => {\n            unsubscribe();\n        };\n    }, [postId]);\n\n    const postComment = (event) => {\n        event.preventDefault();\n        datab.collection(\"posts\").doc(postId).collection(\"comments\").add({\n            text: comment, username: user.displayName, timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        });\n        setComment('');\n    }\n    \n    return (\n    \n    <div className =\"post\">\n        { /* this part is the header of the user and username*/ }\n\n        <div className =\"Post_header\">\n            <Avatar\n                className=\"Post_Avatar\"\n                alt='ChristianeTayar'\n                src=\"/static/images/avatar/1.jpg\"\n            />\n            <h3> {username} </h3>\n            <button className=\"Post_follow\" type=\"button\" onClick={onFollow}>\n     \n                    Follow user\n            </button>\n        </div>\n\n            {/* insert picture*/}\n            <img className=\"Post_pic\" \n            src={imageUrl}\n            alt=\"\" \n            />\n\n            {/* underneath the image -> username and caption*/}\n            <h4 className= \"Post_text\" ><strong> {username} </strong> {caption} </h4>\n\n<Like>\n\n</Like>\n            {/*show all comments*/}\n            <div className=\"Post_comments\">\n                {comments.map((comment) => (\n                <p><strong><i>{comment.username}</i></strong> {comment.text} </p>\n                ))}\n            </div>\n\n\n            {/*comment section over here */}\n            <form className=\"Post_commentbox\">\n\n                <input className=\"Post_input\" type=\"text\" placeholder=\"Add COMMENTS!\" value={comment} onChange={(e) => setComment(e.target.value)} /> \n                <button disabled={!comment} className=\"Post_button\" type=\"submit\" onClick={postComment}>\n                    Submit Comment\n                </button>\n\n            </form>\n            \n\n            \n    </div>\n    )\n}\n\nexport default Post\n\n"]},"metadata":{},"sourceType":"module"}