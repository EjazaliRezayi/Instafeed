{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daren\\\\OneDrive\\\\Desktop\\\\instafeed\\\\Instafeed\\\\src\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Post.css';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { datab } from './firebase';\nimport firebase from 'firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post({\n  postId,\n  username,\n  user,\n  caption,\n  imageUrl\n}) {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n  const [following, setFollowing] = useState(false);\n\n  const onFollow = event => {\n    event.preventDefault();\n    datab.collection(\"following\").doc(firebase.auth().currentUser.uid).collection(\"userFollowing\").add({\n      username: user.displayName,\n      Isfollowing: username\n    });\n  };\n\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) {\n      unsubscribe = datab.collection(\"posts\").doc(postId).collection(\"comments\").orderBy(\"timestamp\", \"asc\").onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n\n  const postComment = event => {\n    event.preventDefault();\n    datab.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setComment('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post_header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: \"Post_Avatar\",\n        alt: \"ChristianeTayar\",\n        src: \"/static/images/avatar/1.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", username, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Post_follow\",\n        type: \"button\",\n        onClick: onFollow,\n        children: \"Follow user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"Post_pic\",\n      src: imageUrl,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"Post_text\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", username, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 41\n      }, this), \" \", caption, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post_comments\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: comment.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 20\n        }, this), \" \", comment.text, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Post_commentbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Post_input\",\n        type: \"text\",\n        placeholder: \"Add COMMENTS!\",\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !comment,\n        className: \"Post_button\",\n        type: \"submit\",\n        onClick: postComment,\n        children: \"Submit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"OcBOi/8YGOonFy9spSntbd1SJI0=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/Daren/OneDrive/Desktop/instafeed/Instafeed/src/Post.js"],"names":["React","useState","useEffect","Avatar","datab","firebase","Post","postId","username","user","caption","imageUrl","comments","setComments","comment","setComment","following","setFollowing","onFollow","event","preventDefault","collection","doc","auth","currentUser","uid","add","displayName","Isfollowing","unsubscribe","orderBy","onSnapshot","snapshot","docs","map","data","postComment","text","timestamp","firestore","FieldValue","serverTimestamp","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Post.css';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { datab } from './firebase';\r\nimport firebase from 'firebase';\r\n\r\nfunction Post({ postId, username, user, caption, imageUrl }) {\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState('');\r\n    const [following, setFollowing]= useState(false);\r\n\r\n\r\n    const onFollow =(event) =>{\r\n        event.preventDefault();\r\n        datab.collection(\"following\").doc(firebase.auth().currentUser.uid).collection(\"userFollowing\").add({\r\n             username: user.displayName, Isfollowing: username\r\n        });\r\n        \r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        let unsubscribe;\r\n        if(postId){\r\n            unsubscribe = datab\r\n            .collection(\"posts\")\r\n            .doc(postId)\r\n            .collection(\"comments\")\r\n            .orderBy(\"timestamp\",\"asc\")\r\n            .onSnapshot((snapshot) => {\r\n                setComments(snapshot.docs.map((doc) => doc.data()));\r\n            });\r\n        }\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, [postId]);\r\n\r\n    const postComment = (event) => {\r\n        event.preventDefault();\r\n        datab.collection(\"posts\").doc(postId).collection(\"comments\").add({\r\n            text: comment, username: user.displayName, timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        });\r\n        setComment('');\r\n    }\r\n    \r\n    return (\r\n    \r\n    <div className =\"post\">\r\n        { /* this part is the header of the user and username*/ }\r\n\r\n        <div className =\"Post_header\">\r\n            <Avatar\r\n                className=\"Post_Avatar\"\r\n                alt='ChristianeTayar'\r\n                src=\"/static/images/avatar/1.jpg\"\r\n            />\r\n            <h3> {username} </h3>\r\n            <button className=\"Post_follow\" type=\"button\" onClick={onFollow}>\r\n     \r\n                    Follow user\r\n            </button>\r\n        </div>\r\n\r\n            {/* insert picture*/}\r\n            <img className=\"Post_pic\" \r\n            src={imageUrl}\r\n            alt=\"\" \r\n            />\r\n\r\n            {/* underneath the image -> username and caption*/}\r\n            <h4 className= \"Post_text\" ><strong> {username} </strong> {caption} </h4>\r\n\r\n            {/*show all comments*/}\r\n            <div className=\"Post_comments\">\r\n                {comments.map((comment) => (\r\n                <p><strong><i>{comment.username}</i></strong> {comment.text} </p>\r\n                ))}\r\n            </div>\r\n\r\n\r\n            {/*comment section over here */}\r\n            <form className=\"Post_commentbox\">\r\n\r\n                <input className=\"Post_input\" type=\"text\" placeholder=\"Add COMMENTS!\" value={comment} onChange={(e) => setComment(e.target.value)} /> \r\n                <button disabled={!comment} className=\"Post_button\" type=\"submit\" onClick={postComment}>\r\n                    Submit Comment\r\n                </button>\r\n\r\n            </form>\r\n            \r\n\r\n            \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n\r\n"]},"metadata":{},"sourceType":"module"}